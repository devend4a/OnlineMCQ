@model Web.Models.Question1
@{
    ViewBag.Title = "index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section stylesheet{
    <link href="@Url.Content("~/content/summernote/summernote.css")" rel="stylesheet" type="text/css" />
}
@section head_scripts{
    <script src="@Url.Content("~/content/summernote/summernote.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/content/summernote/load-image.all.min.js")" type="text/javascript"></script>
}


<section class="content-header">
    <h1>
        Manage Questions
    </h1>
</section>
<section class="content">
    <script type="text/javascript">
        $(document).ready(function () {
            $(".btnDownload").click(function () {
                var format = $(this).attr("data-download-format");
                switch (format) {
                    case "XLS":
                        $("#format").val("@Web.Controllers.HomeController.DownloadFormat.XLS");
                        break;
                    case "XML":
                        $("#format").val("@Web.Controllers.HomeController.DownloadFormat.XML");
                        break;
                    case "CSV":
                        $("#format").val("@Web.Controllers.HomeController.DownloadFormat.CSV");
                        break;
                    default:
                        break;
                }
                var data = JSON.stringify($('#example').dataTable().fnGetData());
                $("#gridData").val(data);
                $("#frmDownload").submit();
            });
        });
    </script>
    <form action="@Url.Action("downloadgriddata", "home")" id="frmDownload" method="post">
        <input type="hidden" name="gridData" id="gridData" value="" />
        <input type="hidden" name="format" id="format" value="@Web.Controllers.HomeController.DownloadFormat.XLS" />
        <button class="btn btn-primary btnDownload btn-flat btn-sm bg-blue" role="button" data-download-format="XML"><i class="fa fa-download"></i>&nbsp;&nbsp;&nbsp;Export Xml</button>
        <button class="btn btn-primary btnDownload btn-flat btn-sm bg-green" role="button" data-download-format="XLS"><i class="fa fa-file-excel-o"></i>&nbsp;&nbsp;&nbsp;Export Excel</button>
        <button class="btn btn-primary btnDownload btn-flat btn-sm bg-olive" role="button" data-download-format="CSV"><i class="fa fa-download"></i>&nbsp;&nbsp;&nbsp;Export Csv</button>
    </form>
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-body table-responsive">
                    <div class="input-group margin" style="margin-left:0px;">
                        <input id="txt-search-query" type="text" class="form-control">
                        <span class="input-group-btn">
                            <button id="btn-refresh" class="btn btn-primary btn-flat" type="button"><i class="fa fa-refresh"></i></button>
                            <button id="btn-search" class="btn btn-primary btn-flat" type="button"><i class="fa fa-search"></i>&nbsp;&nbsp;FIND</button>
                        </span>
                        <input type="button" id="btn-open-modal" data-toggle="modal" data-target="#add-new-modal" value="" style="display:none;" />
                        <button id="btn-add-new" class="btn btn-primary btn-flat" style="float: right;"><i class="fa fa-plus"></i>&nbsp;&nbsp;ADD NEW Batch</button>
                    </div>
                    <table id="example" class="table table-bordered table-hover dataTable" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                @*<th>ID</th>
                                    <th>CompanyID</th>*@
                                <th>Title</th>
                                <th>Code</th>
                                <th>OtherDetails</th>
                                @*<th>CreationDate</th>
                                    <th>CreationTime</th>
                                    <th>ModificationDate</th>
                                    <th>CreatedBy</th>
                                    <th>ModifiedBy</th>
                                    <th>ModificationTime</th>*@
                                <th>StartFrom</th>
                                <th>EndTo</th>
                                <th>IsActive</th>

                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>
@{
    var data = new List<Web.Helper.GridHelper>();
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ID" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CompanyID" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "Title" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "Code" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "OtherDetails" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CreationDate" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CreationTime" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ModificationDate" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CreatedBy" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ModifiedBy" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ModificationTime" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "StartFrom" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "EndTo" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "IsActive" });

    var modelData = new Tuple<IEnumerable<Web.Helper.GridHelper>, String>(data, "Batch");
}
@section scripts {
    <script type="text/javascript">
        function fnClearForm() {
            $('#ID').val('');
            $('#CompanyID').val('');
            $('#Title').val('');
            $('#Code').val('');
            $('#OtherDetails').val('');
            $('#CreationDate').val('');
            $('#CreationTime').val('');
            $('#ModificationDate').val('');
            $('#CreatedBy').val('');
            $('#ModifiedBy').val('');
            $('#ModificationTime').val('');
            $('#StartFrom').val('');
            $('#EndTo').val('');
            $('#IsActive').val('');

        }
        function fnSetupForm(obj) {
            $('#ID').val(obj.ID);
            $('#CompanyID').val(obj.CompanyID);
            $('#Title').val(obj.Title);
            $('#Code').val(obj.Code);
            $('#OtherDetails').val(obj.OtherDetails);
            $('#CreationDate').val(obj.CreationDate);
            $('#CreationTime').val(obj.CreationTime);
            $('#ModificationDate').val(obj.ModificationDate);
            $('#CreatedBy').val(obj.CreatedBy);
            $('#ModifiedBy').val(obj.ModifiedBy);
            $('#ModificationTime').val(obj.ModificationTime);
            $('#StartFrom').val(obj.StartFrom);
            $('#EndTo').val(obj.EndTo);
            $('#IsActive').val(obj.IsActive);

        }
        function fnSubmit() {
            $("#frm-add-edit-form").submit();
        }
    </script>
    @Html.Partial("~/Views/_CrudGridJs.cshtml", modelData)
}
<div class="modal fade" id="add-new-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="width:800px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="model-title-h4" add-title="Add New Batch" edit-title="Modify Selected Batch"><i class="fa fa-plus"></i>&nbsp;&nbsp;&nbsp;Add New Batch</h4>
            </div>
            <form action="#" method="post" class="box" id="frm-add-edit-form">
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-flat fa fa-close" data-dismiss="modal">&nbsp;&nbsp;&nbsp;Close</button>
                    <button type="button" class="btn btn-primary btn-flat fa fa-save" onclick="fnSubmit();">&nbsp;&nbsp;&nbsp;Save changes</button>
                </div>
                <input type="hidden" name="ID" id="ID" value="" />
                <input type="hidden" name="CompanyID" id="CompanyID" value="" />
                <input type="hidden" name="CreationDate" id="CreationDate" value="" />
                <input type="hidden" name="CreationTime" id="CreationTime" value="" />
                <input type="hidden" name="ModificationDate" id="ModificationDate" value="" />
                <input type="hidden" name="CreatedBy" id="CreatedBy" value="" />
                <input type="hidden" name="ModifiedBy" id="ModifiedBy" value="" />
                <input type="hidden" name="ModificationTime" id="ModificationTime" value="" />
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label for="QuestionTextEnglish">Question Text @Html.ValidationMessageFor(P => P.QuestionTextEnglish)</label>
                                @Html.TextBoxFor(P => P.QuestionTextEnglish, new { @class = "form-control summer-note" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="OptionATextEnglish">Option A @Html.ValidationMessageFor(P => P.OptionATextEnglish)</label>
                                @Html.TextBoxFor(P => P.OptionATextEnglish, new { @class = "form-control summer-note-opt" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="OptionBTextEnglish">Option B @Html.ValidationMessageFor(P => P.OptionBTextEnglish)</label>
                                @Html.TextBoxFor(P => P.OptionBTextEnglish, new { @class = "form-control summer-note-opt" })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="OptionCTextEnglish">Option C @Html.ValidationMessageFor(P => P.OptionCTextEnglish)</label>
                                @Html.TextBoxFor(P => P.OptionCTextEnglish, new { @class = "form-control summer-note-opt" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="OptionDTextEnglish">Option D @Html.ValidationMessageFor(P => P.OptionDTextEnglish)</label>
                                @Html.TextBoxFor(P => P.OptionDTextEnglish, new { @class = "form-control summer-note-opt" })
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="OptionETextEnglish">Option E @Html.ValidationMessageFor(P => P.OptionETextEnglish)</label>
                                @Html.TextBoxFor(P => P.OptionETextEnglish, new { @class = "form-control summer-note-opt" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="CorrectOptions">Correct Options @Html.ValidationMessageFor(P => P.CorrectOptions)</label><br />
                                A.<input type="checkbox" name="CorrectOptions[0]" value="A" /><br />
                                B.<input type="checkbox" name="CorrectOptions[0]" value="A" /><br />
                                C.<input type="checkbox" name="CorrectOptions[0]" value="A" /><br />
                                D.<input type="checkbox" name="CorrectOptions[0]" value="A" /><br />
                                E.<input type="checkbox" name="CorrectOptions[0]" value="A" /><br />
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-flat fa fa-close" data-dismiss="modal">&nbsp;&nbsp;&nbsp;Close</button>
                    <button type="button" class="btn btn-primary btn-flat fa fa-save" onclick="fnSubmit();">&nbsp;&nbsp;&nbsp;Save changes</button>
                </div>
                <div class="overlay"></div>
                <div class="loading-img"></div>
            </form>
        </div>
    </div>
</div>




<script type="text/javascript">
    $(document).ready(function () {
        $('.summer-note-opt').summernote({
            focus: true,
            toolbar: [
              //[groupname, [button list]]
              ['style', ['bold', 'italic', 'underline', 'clear']],
              ['font', ['superscript', 'subscript']],
              ['color', ['color']],
              //['para', ['ul', 'ol']],
              ['insert', ['picture', 'specialChar']]
            ]
        });

        convert_to_summernote($('.summer-note'), "");
    });


    function convert_to_summernote(element, init_html) {
        element.summernote({
            minHeight: 40,
            focus: true,
            //toolbar: [
            //  //[groupname, [button list]]
            //  ['style', ['bold', 'italic', 'underline', 'clear']],
            //  ['font', ['superscript', 'subscript']],
            //  ['color', ['color']],
            //  ['para', ['ul', 'ol']],
            //  ['insert', ['picture', 'specialChar']]
            //],
            callbacks: {
                onInit: function () {
                    //console.log(init_html);
                    if (init_html) {
                        $(this).summernote("insertNode", $(init_html)[0])
                        $(this).summernote("insertText", " ");
                    }
                },

                onImageUpload: function (files, editor, welEditable) {
                    //console.log(files, editor, welEditable);
                    var file = files[0];
                    if (!file.type.match('image.*')) {
                        console.log("Error !! Not an Image !! ");
                        return;
                    }
                    var current_summernote = $(this);
                    var old_orientation = 1;
                    loadImage.parseMetaData(file, function (mydata) {
                        console.log(mydata);

                        if (mydata.exif) {
                            old_orientation = mydata.exif.get('Orientation');
                            console.log("Image Orientation : " + old_orientation);
                        }
                        var loadingImage = loadImage(file, function (img) {
                            if (img.type === "error") {
                                console.log("Error loading image ");
                            }
                            else {

                                // document.body.appendChild(img);
                                var img_tag = $('<img>', { 'src': img.toDataURL() });
                                current_summernote.summernote("insertImage", img.toDataURL(file.type, 0.9), "awesome");
                                return;
                            }
                        }, { maxWidth: 900, canvas: true, orientation: old_orientation });
                    });
                }
            }
        });
    }
</script>