@model Web.Models.Student
@{
    ViewBag.Title = "Student";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section stylesheet {
    <style type="text/css">
        .table-responsive {
            overflow-x: auto;
        }
    </style>
}
<section class="content-header">
    <h1>
        Manage Students
    </h1>
</section>
<section class="content">
    <script type="text/javascript">
        $(document).ready(function () {
            $(".btnDownload").click(function () {
                var format = $(this).attr("data-download-format");
                switch (format) {
                    case "XLS":
                        $("#format").val("@Web.Controllers.HomeController.DownloadFormat.XLS");
                        break;
                    case "XML":
                        $("#format").val("@Web.Controllers.HomeController.DownloadFormat.XML");
                        break;
                    case "CSV":
                        $("#format").val("@Web.Controllers.HomeController.DownloadFormat.CSV");
                        break;
                    default:
                        break;
                }
                var data = JSON.stringify($('#example').dataTable().fnGetData());
                $("#gridData").val(data);
                $("#frmDownload").submit();
            });
        });
    </script>
    <form action="@Url.Action("downloadgriddata", "home")" id="frmDownload" method="post">
        <input type="hidden" name="gridData" id="gridData" value="" />
        <input type="hidden" name="format" id="format" value="@Web.Controllers.HomeController.DownloadFormat.XLS" />
        <button class="btn btn-primary btnDownload btn-flat btn-sm bg-blue" role="button" data-download-format="XML"><i class="fa fa-download"></i>&nbsp;&nbsp;&nbsp;Export Xml</button>
        <button class="btn btn-primary btnDownload btn-flat btn-sm bg-green" role="button" data-download-format="XLS"><i class="fa fa-file-excel-o"></i>&nbsp;&nbsp;&nbsp;Export Excel</button>
        <button class="btn btn-primary btnDownload btn-flat btn-sm bg-olive" role="button" data-download-format="CSV"><i class="fa fa-download"></i>&nbsp;&nbsp;&nbsp;Export Csv</button>
    </form>
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-body table-responsive">
                    <div class="input-group margin" style="margin-left:0px;">
                        <input id="txt-search-query" type="text" class="form-control">
                        <span class="input-group-btn">
                            <button id="btn-refresh" class="btn btn-primary btn-flat" type="button"><i class="fa fa-refresh"></i></button>
                            <button id="btn-search" class="btn btn-primary btn-flat" type="button"><i class="fa fa-search"></i>&nbsp;&nbsp;FIND</button>
                        </span>
                        <input type="button" id="btn-open-modal" data-toggle="modal" data-target="#add-new-modal" value="" style="display:none;" />

                        <button id="btn-add-new" class="btn btn-primary btn-flat" style="float: right;"><i class="fa fa-plus"></i>&nbsp;&nbsp;ADD NEW Student</button>
                    </div>
                    <div class="row input-group margin"><h4><label><a href="@Url.Action("fileimport","home")"><i class="fa fa-external-link"></i>&nbsp;Click here to import student data from excel file.</a></label></h4></div>
                    <table id="example" class="table table-bordered table-hover dataTable" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                @*<th>ID</th>
                                    <th>CompanyID</th>*@
                                <th>Email</th>
                                @*<th>Password</th>*@
                                <th>FirstName</th>
                                <th>MiddleName</th>
                                <th>LastName</th>
                                <th>EnrollmentNo</th>
                                <th>Contact</th>
                                <th>Address</th>
                                <th>OtherDetails</th>
                                @*<th>CreationDate</th>
                                    <th>CreationTime</th>
                                    <th>ModificationDate</th>
                                    <th>CreatedBy</th>
                                    <th>ModifiedBy</th>
                                    <th>ModificationTime</th>*@
                                <th>IsActive</th>

                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>
@{
    var data = new List<Web.Helper.GridHelper>();
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ID" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CompanyID" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "Email", Sortable = false });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "Password" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "FirstName", Sortable = false });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "MiddleName", Sortable = false });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "LastName", Sortable = false });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "EnrollmentNo", Sortable = false });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "Contact", Sortable = false });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "Address", Sortable = false });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "OtherDetails", Sortable = false });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CreationDate" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CreationTime" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ModificationDate" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CreatedBy" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ModifiedBy" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ModificationTime" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "IsActive", Sortable = false });

    var modelData = new Web.Helper.GridModelData(new Tuple<IEnumerable<Web.Helper.GridHelper>, String>(data, "Student"));
    modelData.SortingEnabled = false;
}
@section scripts {
    <script>
        /*jslint unparam: true */
        /*global window, $ */
        $(function () {
            'use strict';
            // Change this to the location of your server-side upload handler:
            var url = "@Url.Action("uploadpic", "home")";
            $('#fileupload').fileupload({
                maxFileSize: 999000,
                acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                url: url,
                dataType: 'json',
                done: function (e, data) {
                    if (data.result.errors == "") {
                        $.each(data.result.files, function (index, file) {
                            if ($("#preview").attr("data-file-name") && $("#preview").attr("data-file-name") != "" && $("#preview").attr("data-file-name").indexOf("anonymous.png") == -1) {
                                fnQueueToDelete("@Web.Helper.Common.FileType.USER_PHOTO.ToString()", $("#preview").attr("data-file-name"));
                            }
                            $("#preview").attr("src", file.url);
                            $("#preview").attr("data-file-name", file.fileName);
                            $("#Photo").val(file.fileName)
                        });
                    } else {
                        alert(data.result.errors);
                    }
                },
                progressall: function (e, data) {
                    //var progress = parseInt(data.loaded / data.total * 100, 10);
                    //$('#progress .progress-bar').css(
                    //    'width',
                    //    progress + '%'
                    //);
                }
            }).bind('fileuploadchange', function (e, data) {
                //console.log(e, data);
            });
        });
        function fnQueueToDelete(fileType, fileName) {
            //alert(fileType + " ; " + fileName);
            $.ajax({
                url: "@Url.Action("deletepic", "home")",
                type: "POST",
                dataType: "json",
                contentType: "application/json",
                data: "{'FileType':'" + fileType + "','FileName':'" + fileName + "'}",
                success: function (response) { },
                error: function (a, b, c) { }
            });
        }
    </script>
    <script type="text/javascript">
        fnToDatePicker("DateOfBirthText", "DateOfBirth")
        function fnClearForm() {
            $('#ID').val('');
            $('#CompanyID').val('');
            $('#Email').val('');
            $('#Password').val('');
            $('#FirstName').val('');
            $('#MiddleName').val('');
            $('#LastName').val('');
            $('#EnrollmentNo').val('');
            $('#Contact').val('');
            $('#Address').val('');
            $('#OtherDetails').val('');
            $('#CreationDate').val('');
            $('#CreationTime').val('');
            $('#ModificationDate').val('');
            $('#CreatedBy').val('');
            $('#ModifiedBy').val('');
            $('#ModificationTime').val('');
            $('#IsActive').prop("checked", true);
            $('#DateOfBirth').val('');
            $('#DateOfBirthText').val('');
            $('#Photo').val('');
            $("#preview").attr("src", "");
            $("#preview").attr("data-file-name", "");

            $('#FirstName').attr("maxlength", "35");
            $('#MiddleName').attr("maxlength", "35");
            $('#LastName').attr("maxlength", "35");
            $("#Email").attr("maxlength", "85");
            $('#Password').attr("maxlength", '20');
            $('#EnrollmentNo').attr("maxlength", '20');
            $('#Contact').attr("maxlength",'25');
            $('#Address').attr("maxlength", '150');
            $('#OtherDetails').attr("maxlength", '150');

        }
        function fnSetupForm(obj) {
            $('#ID').val(obj.ID);
            $('#CompanyID').val(obj.CompanyID);
            $('#Email').val(obj.Email);
            $('#Password').val(obj.Password);
            $('#FirstName').val(obj.FirstName);
            $('#MiddleName').val(obj.MiddleName);
            $('#LastName').val(obj.LastName);
            $('#EnrollmentNo').val(obj.EnrollmentNo);
            $('#Contact').val(obj.Contact);
            $('#Address').val(obj.Address);
            $('#OtherDetails').val(obj.OtherDetails);
            $('#CreationDate').val(obj.CreationDate);
            $('#CreationTime').val(obj.CreationTime);
            $('#ModificationDate').val(obj.ModificationDate);
            $('#CreatedBy').val(obj.CreatedBy);
            $('#ModifiedBy').val(obj.ModifiedBy);
            $('#ModificationTime').val(obj.ModificationTime);
            if (obj.IsActive == true) {
                $('#IsActive').prop("checked", true);
            }
            $('#DateOfBirth').val(obj.DateOfBirth);
            $('#DateOfBirthText').val(fnToPickerDate(obj.DateOfBirth));
            $('#Photo').val(obj.Photo);
            $("#preview").attr("src", obj.PhotoUrl);
            $("#preview").attr("data-file-name", obj.Photo);
        }
        function fnSubmit() {
            $("#frm-add-edit-form").validate();
            if ($("#frm-add-edit-form").valid()) {
                //$("#frm-add-edit-form").submit();
                ToggleOverlayLoading(true);
                $.ajax({
                    url: $("#frm-add-edit-form").attr("action"),
                    type: "POST",
                    data: $("#frm-add-edit-form").serialize(),
                    success: function (response) {
                        ToggleOverlayLoading(false);
                        location.href = "@Url.Action("index","student")";
                    },
                    error: function (a, b, c) { }
                });
            }
        }
    </script>
    @Html.Partial("~/Views/_CrudGridJs.cshtml", modelData)
}
<div class="modal fade" id="add-new-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="width:800px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="model-title-h4" add-title="Add New Student" edit-title="Modify Selected Student"><i class="fa fa-plus"></i>&nbsp;&nbsp;&nbsp;Add New Student</h4>
            </div>
            <form action="#" method="post" class="box" id="frm-add-edit-form">
                <input type="hidden" name="ID" id="ID" value="" />
                <input type="hidden" name="CompanyID" id="CompanyID" value="" />
                <input type="hidden" name="CreationDate" id="CreationDate" value="" />
                <input type="hidden" name="CreationTime" id="CreationTime" value="" />
                <input type="hidden" name="ModificationDate" id="ModificationDate" value="" />
                <input type="hidden" name="CreatedBy" id="CreatedBy" value="" />
                <input type="hidden" name="ModifiedBy" id="ModifiedBy" value="" />
                <input type="hidden" name="ModificationTime" id="ModificationTime" value="" />
                <input type="hidden" name="Photo" id="Photo" value="" />
                <div class="modal-body">
                    <div class="col-lg-12">
                        <div class="col-lg-6">
                            <div id="files" class="files">
                                <div class="col-lg-12">
                                    <label for="FirstName">Upload/Modify Photo(PNG/JPG allowed.)</label><br />
                                    <span class="fileinput-button">
                                        <img title="Change Image" data-file-name="" class="pull-right" id="preview" src="@AnonymousUserPng" alt="" style="width:150px; height:150px;" />
                                        <input id="fileupload" type="file" name="files">
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="row">
                                <div class="form-group col-lg-12">
                                    <label for="FirstName">First Name @Html.ValidationMessageFor(P => P.FirstName)</label>
                                    @Html.TextBoxFor(P => P.FirstName, new { @class = "form-control", placeholder = "FirstName" })
                                </div>
                                <div class="form-group col-lg-12">
                                    <label for="MiddleName">Middle Name @Html.ValidationMessageFor(P => P.MiddleName)</label>
                                    @Html.TextBoxFor(P => P.MiddleName, new { @class = "form-control", placeholder = "MiddleName" })
                                </div>
                                <div class="form-group col-lg-12">
                                    <label for="LastName">Last Name @Html.ValidationMessageFor(P => P.LastName)</label>
                                    @Html.TextBoxFor(P => P.LastName, new { @class = "form-control", placeholder = "LastName" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-lg-6">
                            <label for="Email">Email @Html.ValidationMessageFor(P => P.Email)</label>
                            @Html.TextBoxFor(P => P.Email, new { @class = "form-control", placeholder = "Email" })
                        </div>
                        <div class="form-group col-lg-6">
                            <label for="Password">Password @Html.ValidationMessageFor(P => P.Password)</label>
                            @Html.TextBoxFor(P => P.Password, new { @class = "form-control", placeholder = "Password" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-lg-6">
                            <label for="EnrollmentNo">Enrollment No. @Html.ValidationMessageFor(P => P.EnrollmentNo)</label>
                            @Html.TextBoxFor(P => P.EnrollmentNo, new { @class = "form-control", placeholder = "EnrollmentNo" })
                        </div>
                        <div class="form-group col-lg-6">
                            <label for="Contact">Contact details @Html.ValidationMessageFor(P => P.Contact)</label>
                            @Html.TextBoxFor(P => P.Contact, new { @class = "form-control", placeholder = "Contact" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            <label for="DateOfBirthText">Date Of Birth @Html.ValidationMessageFor(P => P.DateOfBirthText)</label><br />
                            @Html.TextBoxFor(P => P.DateOfBirthText, new { @class = "", placeholder = "Date Of Birth" })
                            <input type="hidden" name="DateOfBirth" id="DateOfBirth" value="" />
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.CheckBoxFor(P => P.IsActive, new { @class = "" })<label for="IsActive">Is Active? @Html.ValidationMessageFor(P => P.IsActive)</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            <label for="Address">Address @Html.ValidationMessageFor(P => P.Address)</label>
                            @Html.TextAreaFor(P => P.Address, new { @class = "form-control", placeholder = "Address" })
                        </div>
                        <div class="form-group col-lg-6">
                            <label for="OtherDetails">Other Details @Html.ValidationMessageFor(P => P.OtherDetails)</label>
                            @Html.TextAreaFor(P => P.OtherDetails, new { @class = "form-control", placeholder = "OtherDetails" })
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-flat fa fa-close" data-dismiss="modal">&nbsp;&nbsp;&nbsp;Close</button>
                    <button type="button" class="btn btn-primary btn-flat fa fa-save" onclick="fnSubmit();">&nbsp;&nbsp;&nbsp;Save changes</button>
                </div>
                <div class="overlay"></div>
                <div class="loading-img"></div>
            </form>
        </div>
    </div>
</div>
