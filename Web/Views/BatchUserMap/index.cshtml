@model Web.Models.BatchUserMap
@{
    ViewBag.Title = "BatchUserMap";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var students = ViewBag.Students as List<Web.Models.Student>;
    if (students == null)
    {
        students = new List<Web.Models.Student>();
    }

    var batch = ViewBag.Batch as Web.Models.Batch;
    if (batch == null)
    {
        batch = new Web.Models.Batch();
    }
}
@section stylesheet {
    <style type="text/css">
        .table-responsive {
            overflow-x: auto;
        }
    </style>
}
<section class="content-header">
    <h1>
        Manage Students for a Batch
    </h1>
</section>
<section class="content">
    <script type="text/javascript">
        $(document).ready(function () {
            $(".btnDownload").click(function () {
                var format = $(this).attr("data-download-format");
                switch (format) {
                    case "XLS":
                        $("#format").val("@Web.Controllers.HomeController.DownloadFormat.XLS");
                        break;
                    case "XML":
                        $("#format").val("@Web.Controllers.HomeController.DownloadFormat.XML");
                        break;
                    case "CSV":
                        $("#format").val("@Web.Controllers.HomeController.DownloadFormat.CSV");
                        break;
                    default:
                        break;
                }
                var data = JSON.stringify($('#example').dataTable().fnGetData());
                $("#gridData").val(data);
                $("#frmDownload").submit();
            });
        });
    </script>
    <form action="@Url.Action("downloadgriddata", "home")" id="frmDownload" method="post">
        <input type="hidden" name="gridData" id="gridData" value="" />
        <input type="hidden" name="format" id="format" value="@Web.Controllers.HomeController.DownloadFormat.XLS" />
        <button class="btn btn-primary btnDownload btn-flat btn-sm bg-blue" role="button" data-download-format="XML"><i class="fa fa-download"></i>&nbsp;&nbsp;&nbsp;Export Xml</button>
        <button class="btn btn-primary btnDownload btn-flat btn-sm bg-green" role="button" data-download-format="XLS"><i class="fa fa-file-excel-o"></i>&nbsp;&nbsp;&nbsp;Export Excel</button>
        <button class="btn btn-primary btnDownload btn-flat btn-sm bg-olive" role="button" data-download-format="CSV"><i class="fa fa-download"></i>&nbsp;&nbsp;&nbsp;Export Csv</button>
    </form>
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-body table-responsive">
                    <div class="input-group margin" style="margin-left:0px;">
                        <input id="txt-search-query" type="text" class="form-control">
                        <span class="input-group-btn">
                            <button id="btn-refresh" class="btn btn-primary btn-flat" type="button"><i class="fa fa-refresh"></i></button>
                            <button id="btn-search" class="btn btn-primary btn-flat" type="button"><i class="fa fa-search"></i>&nbsp;&nbsp;FIND</button>
                        </span>
                        <input type="button" id="btn-open-modal" data-toggle="modal" data-target="#add-new-modal" value="" style="display:none;" />
                        <button id="btn-add-new" class="btn btn-primary btn-flat" style="float: right;"><i class="fa fa-plus"></i>&nbsp;&nbsp;Add/Remove Student to/from Batch</button>
                    </div>
                    <table id="example" class="table table-bordered table-hover dataTable" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                @*<th>ID</th>
                                    <th>CompanyID</th>
                                    <th>BatchID</th>
                                    <th>UserID</th>
                                    <th>OtherDetails</th>
                                    <th>CreationDate</th>
                                    <th>CreationTime</th>
                                    <th>ModificationDate</th>
                                    <th>CreatedBy</th>
                                    <th>ModifiedBy</th>
                                    <th>ModificationTime</th>*@
                                <th>BatchInfo</th>
                                <th>StudentInfo</th>
                                @*<th>IsActive</th>

                                    <th>Action</th>*@
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>
@{
    var data = new List<Web.Helper.GridHelper>();
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ID" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CompanyID" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "BatchID" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "UserID" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "OtherDetails" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CreationDate" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CreationTime" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ModificationDate" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "CreatedBy" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ModifiedBy" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "ModificationTime" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "BatchInfo" });
    data.Add(new Web.Helper.GridHelper() { ColumnName = "StudentInfo" });
    //data.Add(new Web.Helper.GridHelper() { ColumnName = "IsActive" });

    var modelData = new Web.Helper.GridModelData(new Tuple<IEnumerable<Web.Helper.GridHelper>, String>(data, "BatchUserMap"));
    modelData.UrlPart = @"?id=" + ViewBag.ID;
    modelData.ShowActionColumn = false;
}
@section scripts {
    <script type="text/javascript">
        function fnUpdateStudent(action) {

            switch (action) {
                case "CLEAR":
                    $(".student-chk").prop("checked", false);
                    break;
                case "SELECT":
                    $(".student-chk").prop("checked", true);
                    break;
                case "SUBMIT":
                    var selectedStudents = [];
                    $(".student-row").map(function (i, obj) {
                        var chk = $(obj).find(".student-chk");
                        var remark = $(obj).find(".student-remark");
                        if ($(chk).prop("checked") === true) {
                            selectedStudents.push({ Value: $(chk).attr("data-student-id"), Text: $(remark).val() });
                        }
                        return null;
                    });
                    //alert(JSON.stringify(selectedStudents));
                    ToggleOverlayLoading(true);
                    $.ajax({
                        url: "@Url.Action("updatelist", "batchusermap")/@ViewBag.ID",
                        type: "POST",
                        dataType:"json",
                        contentType:"application/json",
                        data: JSON.stringify( selectedStudents),
                        success: function (response) {
                            ToggleOverlayLoading(false);
                            if(response.Success)
                            {
                                location.reload();
                            }else{
                                alert(response.ErrorMessage)
                            }
                            //location.href = "@Url.Action("index","student")";
                        },
                        error: function (a, b, c) { }
                    });

                    break;
                default:
                    break;
            }
        }
        function fnClearForm() {
            var fromDate=fnToPickerDate('@batch.StartFrom');
            var toDate=fnToPickerDate('@batch.EndTo');

            $("#lblBatchDetails").html("Batch Details : @batch.Title [@batch.Code] ("+fromDate+" - "+toDate+")");


        }
        function fnSetupForm(obj) {

        }
        function fnSubmit() {
            $("#frm-add-edit-form").submit();
        }
    </script>
    @Html.Partial("~/Views/_CrudGridJs.cshtml", modelData)
}
<div class="modal fade" id="add-new-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="width:800px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="model-title-h4" add-title="Add/Remove Student to/from Batch" edit-title="Add/Remove Student to/from Batch"><i class="fa fa-plus"></i>&nbsp;&nbsp;&nbsp;Add/Remove Student to/from Batch</h4>
            </div>
            <form action="#" method="post" class="box" id="frm-add-edit-form">
                <div class="modal-body">
                    <div class="form-group">
                        <label id="lblBatchDetails">Batch Details : @batch.Title [@batch.Code] (@batch.StartFrom - @batch.EndTo) </label>
                    </div>
                    <div class="form-group">
                        <button id="btnClearAllStudent" onclick="fnUpdateStudent('CLEAR')" type="button" class="btn btn-primary btn-flat btn-sm bg-red" role="button"><i class="fa fa-trash"></i>&nbsp;&nbsp;&nbsp;Clear All</button>
                        <button id="btnSelectAllStudent" type="button" onclick="fnUpdateStudent('SELECT')" class="btn btn-primary btn-flat btn-sm bg-green" role="button"><i class="fa fa-check"></i>&nbsp;&nbsp;&nbsp;Select All</button>
                        <button id="btnSubmitSelectedStudents" type="button" onclick="fnUpdateStudent('SUBMIT')" class="btn btn-primary btn-flat btn-sm bg-blue pull-right" role="button"><i class="fa fa-save"></i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Update&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>
                    </div>
                    <div class="table-responsive">
                        <table id="tblStudent" class="table table-bordered table-hover dataTable" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>Select</th>
                                    <th>Remark</th>
                                    <th>Email</th>
                                    <th>Name</th>
                                    <th>Contact</th>
                                    <th>Address</th>
                                    <th>EnrollmentNo</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < students.Count; i++)
                                {
                                    <tr class="student-row">
                                        <td><input class="student-chk" type="checkbox" name="chkStudent_@i" id="chkStudent_@i" data-student-id="@students[i].ID" value="" /></td>
                                        <td><input class="student-remark" type="text" name="remarkStudent_@i" id="remarkStudent_@i" data-student-id="@students[i].ID" value="" /></td>
                                        <td>@students[i].Email</td>
                                        <td>@string.Concat(students[i].FirstName, " ", students[i].MiddleName, " ", students[i].LastName) </td>
                                        <td>@students[i].Contact</td>
                                        <td>@students[i].Address</td>
                                        <td>@students[i].EnrollmentNo</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <script type="text/javascript">
                        //$('#tblStudent').dataTable({
                        //    "bPaginate": true,
                        //    "bLengthChange": false,
                        //    "bInfo": true,
                        //    "bAutoWidth": false,
                        //    "iDisplayLength": 10
                        //});
                        $('#tblStudent').dataTable({ "iDisplayLength": 100 });

                        var selectedUsers=@Html.Raw(ViewBag.SelectedStudents);

                        for (var i = 0; i < selectedUsers.length; i++) {
                            $("[data-student-id='"+selectedUsers[i]+"']").prop("checked",true);
                        }


                    </script>
                </div>
                <div class="overlay"></div>
                <div class="loading-img"></div>
            </form>
        </div>
    </div>
</div>
